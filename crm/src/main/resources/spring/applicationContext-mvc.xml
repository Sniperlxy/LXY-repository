<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    1.开启注解扫描：只扫描Controller组件-->
     <context:component-scan base-package="com.lxy.crm" use-default-filters="false">
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
     </context:component-scan>

    <!-- 默认前端控制器是拦截所有资源（除过jsp），js文件就404了；要js文件的请求是交给tomcat处理 -->
    <!-- 告诉SpringMVC，自己映射的请求就自己处理，不能处理的请求直接交给tomcat -->
    <!-- 静态资源能访问，动态映射的请求就不行 -->
    <mvc:default-servlet-handler/>
    <!-- 支持注解驱动,springmvc可以保证动态请求和静态请求都能访问 -->
    <mvc:annotation-driven/>

    <!--    3.视图解析器,拼接连接地址-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".html"/>
    </bean>

    <!--4.配置拦截器-->
    <mvc:interceptors>
        <!--配置单个拦截器-->
        <mvc:interceptor>
            <!--拦截所有-->
            <mvc:mapping path="/*"/>
            <!--排除拦截登录请求-->
            <mvc:exclude-mapping path="/login"/>
            <bean class="com.lxy.crm.web.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>